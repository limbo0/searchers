{"message":"unused imports: `Bytes`, `Detokenize`, `H160`, `Http`, `LocalWallet`, `ParamType`, `SignerMiddleware`, `Signer`, `Token`, `Tokenizable`, `TransactionRequest`, `Uint8`, `Units`, `contract`, `encode`, `format_units`, `prelude::abigen`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"uniswap/src/lib.rs","byte_start":24,"byte_end":30,"line_start":2,"line_end":2,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    abi::{encode, Abi, Detokenize, ParamType, Token, Tokenizable},","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":37,"byte_end":47,"line_start":2,"line_end":2,"column_start":24,"column_end":34,"is_primary":true,"text":[{"text":"    abi::{encode, Abi, Detokenize, ParamType, Token, Tokenizable},","highlight_start":24,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":49,"byte_end":58,"line_start":2,"line_end":2,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"    abi::{encode, Abi, Detokenize, ParamType, Token, Tokenizable},","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":60,"byte_end":65,"line_start":2,"line_end":2,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"    abi::{encode, Abi, Detokenize, ParamType, Token, Tokenizable},","highlight_start":47,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":67,"byte_end":78,"line_start":2,"line_end":2,"column_start":54,"column_end":65,"is_primary":true,"text":[{"text":"    abi::{encode, Abi, Detokenize, ParamType, Token, Tokenizable},","highlight_start":54,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":122,"byte_end":130,"line_start":4,"line_end":4,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    middleware::{contract, SignerMiddleware},","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":132,"byte_end":148,"line_start":4,"line_end":4,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"    middleware::{contract, SignerMiddleware},","highlight_start":28,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":155,"byte_end":170,"line_start":5,"line_end":5,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    prelude::abigen,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":188,"byte_end":192,"line_start":6,"line_end":6,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"    providers::{Http, Middleware, Provider, Ws},","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":235,"byte_end":246,"line_start":7,"line_end":7,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"    signers::{LocalWallet, Signer},","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":248,"byte_end":254,"line_start":7,"line_end":7,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"    signers::{LocalWallet, Signer},","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":278,"byte_end":283,"line_start":8,"line_end":8,"column_start":22,"column_end":27,"is_primary":true,"text":[{"text":"    types::{Address, Bytes, TransactionRequest, Uint8, H160, U256},","highlight_start":22,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":285,"byte_end":303,"line_start":8,"line_end":8,"column_start":29,"column_end":47,"is_primary":true,"text":[{"text":"    types::{Address, Bytes, TransactionRequest, Uint8, H160, U256},","highlight_start":29,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":305,"byte_end":310,"line_start":8,"line_end":8,"column_start":49,"column_end":54,"is_primary":true,"text":[{"text":"    types::{Address, Bytes, TransactionRequest, Uint8, H160, U256},","highlight_start":49,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":312,"byte_end":316,"line_start":8,"line_end":8,"column_start":56,"column_end":60,"is_primary":true,"text":[{"text":"    types::{Address, Bytes, TransactionRequest, Uint8, H160, U256},","highlight_start":56,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":337,"byte_end":349,"line_start":9,"line_end":9,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    utils::{format_units, Units},","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":351,"byte_end":356,"line_start":9,"line_end":9,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"    utils::{format_units, Units},","highlight_start":27,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"uniswap/src/lib.rs","byte_start":24,"byte_end":32,"line_start":2,"line_end":2,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"    abi::{encode, Abi, Detokenize, ParamType, Token, Tokenizable},","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":35,"byte_end":78,"line_start":2,"line_end":2,"column_start":22,"column_end":65,"is_primary":true,"text":[{"text":"    abi::{encode, Abi, Detokenize, ParamType, Token, Tokenizable},","highlight_start":22,"highlight_end":65}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":103,"byte_end":170,"line_start":3,"line_end":5,"column_start":23,"column_end":20,"is_primary":true,"text":[{"text":"    contract::Contract,","highlight_start":23,"highlight_end":24},{"text":"    middleware::{contract, SignerMiddleware},","highlight_start":1,"highlight_end":46},{"text":"    prelude::abigen,","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":188,"byte_end":194,"line_start":6,"line_end":6,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    providers::{Http, Middleware, Provider, Ws},","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":219,"byte_end":255,"line_start":6,"line_end":7,"column_start":48,"column_end":35,"is_primary":true,"text":[{"text":"    providers::{Http, Middleware, Provider, Ws},","highlight_start":48,"highlight_end":49},{"text":"    signers::{LocalWallet, Signer},","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":276,"byte_end":316,"line_start":8,"line_end":8,"column_start":20,"column_end":60,"is_primary":true,"text":[{"text":"    types::{Address, Bytes, TransactionRequest, Uint8, H160, U256},","highlight_start":20,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":323,"byte_end":357,"line_start":8,"line_end":9,"column_start":67,"column_end":33,"is_primary":true,"text":[{"text":"    types::{Address, Bytes, TransactionRequest, Uint8, H160, U256},","highlight_start":67,"highlight_end":68},{"text":"    utils::{format_units, Units},","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Bytes`, `Detokenize`, `H160`, `Http`, `LocalWallet`, `ParamType`, `SignerMiddleware`, `Signer`, `Token`, `Tokenizable`, `TransactionRequest`, `Uint8`, `Units`, `contract`, `encode`, `format_units`, `prelude::abigen`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap/src/lib.rs:2:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    abi::{encode, Abi, Detokenize, ParamType, Token, Tokenizable},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    contract::Contract,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    middleware::{contract, SignerMiddleware},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    prelude::abigen,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    providers::{Http, Middleware, Provider, Ws},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    signers::{LocalWallet, Signer},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    types::{Address, Bytes, TransactionRequest, Uint8, H160, U256},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    utils::{format_units, Units},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"uniswap/src/lib.rs","byte_start":432,"byte_end":435,"line_start":15,"line_end":15,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    env,","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"uniswap/src/lib.rs","byte_start":426,"byte_end":435,"line_start":14,"line_end":15,"column_start":20,"column_end":8,"is_primary":true,"text":[{"text":"    cmp::{max, min},","highlight_start":20,"highlight_end":21},{"text":"    env,","highlight_start":1,"highlight_end":8}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `env`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap/src/lib.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    env,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"uniswap/src/lib.rs","byte_start":27955,"byte_end":27961,"line_start":306,"line_end":306,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"            client,","highlight_start":13,"highlight_end":19}],"label":"expected `&Arc<Provider<Ws>>`, found `Arc<Result<Provider<Http>, ParseError>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":27809,"byte_end":27821,"line_start":302,"line_end":302,"column_start":9,"column_end":21,"is_primary":false,"text":[{"text":"        get_price_v3(","highlight_start":9,"highlight_end":21}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected reference `&std::sync::Arc<ethers::ethers_providers::Provider<Ws>>`\n      found struct `std::sync::Arc<std::result::Result<ethers::ethers_providers::Provider<Http>, url::parser::ParseError>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"uniswap/src/lib.rs","byte_start":9371,"byte_end":9390,"line_start":203,"line_end":203,"column_start":53,"column_end":72,"is_primary":false,"text":[{"text":"pub async fn get_price_v3(v3_pair_address: Address, client: &NodeClient) -> Result<TokenAndPrice> {","highlight_start":53,"highlight_end":72}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"uniswap/src/lib.rs","byte_start":9332,"byte_end":9344,"line_start":203,"line_end":203,"column_start":14,"column_end":26,"is_primary":true,"text":[{"text":"pub async fn get_price_v3(v3_pair_address: Address, client: &NodeClient) -> Result<TokenAndPrice> {","highlight_start":14,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap/src/lib.rs:306:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        get_price_v3(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            client,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&Arc<Provider<Ws>>`, found `Arc<Result<Provider<Http>, ParseError>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected reference `\u001b[0m\u001b[0m\u001b[1m&std::sync::Arc<ethers::ethers_providers::Provider<Ws>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                  found struct `\u001b[0m\u001b[0m\u001b[1mstd::sync::Arc<std::result::Result<ethers::ethers_providers::Provider<Http>, url::parser::ParseError>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap/src/lib.rs:203:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub async fn get_price_v3(v3_pair_address: Address, client: &NodeClient) -> Result<TokenAndPrice> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\n\n"}
{"message":"unused import: `Middleware`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"uniswap/src/lib.rs","byte_start":194,"byte_end":204,"line_start":6,"line_end":6,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"    providers::{Http, Middleware, Provider, Ws},","highlight_start":23,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Middleware`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0muniswap/src/lib.rs:6:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    providers::{Http, Middleware, Provider, Ws},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to previous error; 3 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error; 3 warnings emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
